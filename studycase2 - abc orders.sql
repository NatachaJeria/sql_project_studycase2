-- I have created a database called aabc_orders 
CREATE DATABASE abc_orders;
USE abc_orders;

-- I imported 3 csv files containing data for 3 tables: orders, products and account. 
-- I checked the data type of all 3 tables

DESCRIBE orders;
DESCRIBE products;
DESCRIBE account;

-- Change order_date from text type to date type
-- Change ship_date from text type to date type
-- Tables produtcs and account are correct 

SET SQL_SAFE_UPDATES=0;

UPDATE orders
SET order_date =str_to_date(order_date,'%m/%d/%Y');
UPDATE orders
SET ship_date =str_to_date(ship_date,'%m/%d/%Y');

ALTER TABLE orders
MODIFY COLUMN order_date date,
MODIFY COLUMN ship_date date;

-- I have checked missing values .
-- order_no must have unique values.

SELECT COUNT(*)
FROM orders
WHERE order_no IS NULL;

SELECT order_no, COUNT(*)
FROM orders
GROUP BY order_no
HAVING COUNT(*) > 1;

-- 2 data have found with duplicates, I verified if duplicates are correct.


SELECT * 
FROM orders
WHERE order_no = '5768-2' OR order_no = '6159-2';

-- Reviewing product_id column, we can see that the numbers are different, meaning that those are different transactions made in the same order_no.
-- Therefore they are not real duplicates. We keep the data as it is.

-- QUESTIONS

-- 1. What is the total revenue generated by each product category?

SELECT b.product_category, ROUND(SUM(a.total),2) AS total_revenue
FROM orders a 
JOIN products b on a.product_id = b.product_id
GROUP BY b.product_category
ORDER BY total_revenue DESC;

-- 2. How many unique products have been ordered?

SELECT count(distinct product_name) AS unique_products
FROM abc_orders.products;

-- 3. What is the total revenue generated by each year?

SELECT YEAR(order_date) AS year, ROUND(SUM(total), 2) AS total_revenue
FROM orders
GROUP BY YEAR(order_date)
ORDER BY total_revenue DESC;

-- 4. What is the total accumulated revenue of the company?

SELECT ROUND(SUM(total),2) AS total_revenue
FROM orders;

-- 5. What product category has the lowest average price of products?

SELECT b.product_category, ROUND(avg(a.retail_price),2) AS avg_price
FROM orders a 
JOIN products b on a.product_id = b.product_id
GROUP BY b.product_category
ORDER BY avg_price ASC;

-- 6. What are the top 10 highest performing products? 

SELECT b.product_name, ROUND(SUM(a.total), 2) AS revenue
FROM orders a 
JOIN products b on a.product_id = b.product_id
GROUP BY b.product_name
ORDER BY revenue DESC
LIMIT 10;

-- 7. Show the total revenue and profit generated by each account manager?

SELECT 
    b.account_manager, 
    ROUND(SUM(a.total), 2) AS revenue,
    ROUND(SUM(a.total) - SUM(a.cost_price * a.order_quantity), 2) AS profit
FROM 
    orders a
JOIN 
    account b ON a.account_id = b.account_id
GROUP BY 
    b.account_manager
ORDER BY 
    revenue DESC;
 
 -- 8. What is the name, city and account manager of the highest selling product in 2017?
 
SELECT 
    b.product_name, 
    a.city, 
    c.account_manager,
    YEAR(a.order_date) AS year,
    ROUND(SUM(a.total), 2) AS revenue
FROM orders a 
JOIN products b ON a.product_id = b.product_id
JOIN account c ON a.account_id = c.account_id
WHERE YEAR(a.order_date) = 2017
GROUP BY b.product_name, a.city, c.account_manager, year
ORDER BY revenue DESC
LIMIT 1;

-- 9. Find the minimun amount spent per order by each customer type?

SELECT customer_type, MIN(total_spent) AS min_spent
FROM (
    SELECT customer_type, ROUND(SUM(total), 2) AS total_spent
    FROM orders
    GROUP BY customer_type
) subquery
GROUP BY customer_type
ORDER BY min_spent DESC;

-- What is the 5th highest selling product?

SELECT b.product_name, ROUND(SUM(a.total), 2) AS revenue
FROM orders a 
JOIN products b on a.product_id = b.product_id
GROUP BY b.product_name
ORDER BY revenue DESC
LIMIT 5;

